// <auto-generated />
using System;
using ClassDiagram.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassDiagram.Migrations
{
    [DbContext(typeof(EntityDB))]
    partial class EntityDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassDiagram.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Deleted");

                    b.Property<string>("Door");

                    b.Property<string>("Floor");

                    b.Property<string>("HouseNumber");

                    b.Property<string>("Streetname");

                    b.Property<int>("Zipcode");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ClassDiagram.Models.AdminUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ChangeDuration");

                    b.Property<bool>("ChangeOpeningHours");

                    b.Property<bool>("ChangeScheduleLimit");

                    b.Property<bool>("ChangeShowID");

                    b.Property<bool>("CreateDeleteMachine");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("DeleteAdmins");

                    b.Property<bool>("DeleteEndUsers");

                    b.Property<DateTime>("Deleted");

                    b.Property<bool>("IsMaster");

                    b.Property<string>("PersonDataEmail");

                    b.HasKey("ID");

                    b.HasIndex("PersonDataEmail");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("ClassDiagram.Models.EndUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Deleted");

                    b.Property<string>("PersonDataEmail");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.HasIndex("PersonDataEmail");

                    b.ToTable("EndUser");
                });

            modelBuilder.Entity("ClassDiagram.Models.Laundry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClosingTime");

                    b.Property<DateTime>("Created");

                    b.Property<int>("DefaultDuration");

                    b.Property<DateTime>("Deleted");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OpeningTime");

                    b.Property<int>("Pin");

                    b.Property<int>("ScheduleLimit");

                    b.Property<int>("ShowID");

                    b.HasKey("ID");

                    b.ToTable("Laundry");
                });

            modelBuilder.Entity("ClassDiagram.Models.Machine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Deleted");

                    b.Property<string>("Description");

                    b.Property<int?>("MachineDuration");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("ClassDiagram.Models.Person", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastLogin");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Email");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ClassDiagram.Models.Schedules", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Deleted");

                    b.Property<int?>("EndUserID");

                    b.Property<int>("Status");

                    b.Property<DateTime>("Time");

                    b.HasKey("ID");

                    b.HasIndex("EndUserID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ClassDiagram.Models.AdminUser", b =>
                {
                    b.HasOne("ClassDiagram.Models.Person", "PersonData")
                        .WithMany()
                        .HasForeignKey("PersonDataEmail");
                });

            modelBuilder.Entity("ClassDiagram.Models.EndUser", b =>
                {
                    b.HasOne("ClassDiagram.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("ClassDiagram.Models.Person", "PersonData")
                        .WithMany()
                        .HasForeignKey("PersonDataEmail");
                });

            modelBuilder.Entity("ClassDiagram.Models.Schedules", b =>
                {
                    b.HasOne("ClassDiagram.Models.EndUser", "EndUser")
                        .WithMany()
                        .HasForeignKey("EndUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
